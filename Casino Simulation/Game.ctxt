#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ <html>\r\n\ <body>\r\n\ <h1>Game\ Class</h1>\r\n\ <p>This\ abstract\ class\ extends\ <em>Actor</em>\ and\ serves\ as\ a\ superclass\ for\ all\ game\ types\ in\ a\ Greenfoot\ game.\ It\ provides\ common\ functionalities\ and\ attributes\ needed\ by\ various\ game\ subclasses,\ particularly\ in\ managing\ gamblers\ and\ spots\ within\ the\ game.</p>\r\n\r\n\ <h2>Class\ Attributes\:</h2>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>gamblers\:</strong>\ An\ array\ of\ Gamblers\ participating\ in\ the\ game.</li>\r\n\ \ \ \ \ <li><strong>spots\:</strong>\ An\ array\ of\ spots\ available\ in\ the\ game.</li>\r\n\ \ \ \ \ <li><strong>isNew\:</strong>\ A\ flag\ to\ check\ if\ the\ game\ instance\ is\ new.</li>\r\n\ \ \ \ \ <li><strong>actNumber\:</strong>\ Tracks\ the\ number\ of\ action\ steps\ taken.</li>\r\n\ \ \ \ \ <li><strong>reserved\:</strong>\ Indicates\ if\ spots\ are\ reserved.</li>\r\n\ \ \ \ \ <li><strong>t\:</strong>\ A\ transparency\ level\ for\ the\ game's\ image.</li>\r\n\ </ul>\r\n\ \r\n\ @author\ Jimmy\ Zhu,\ David\ Guo\r\n\ @version\ 1.0\ 11/22/2023\r\n
comment1.params=spots
comment1.target=Game(SpotManager.Spot[])
comment1.text=\r\n\ <h2>Constructor\:</h2>\r\n\ <p>Initializes\ a\ new\ Game\ instance\ with\ a\ set\ of\ spots\ and\ prepares\ it\ for\ adding\ gamblers.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ \ <li><strong>spots\ (SpotManager.Spot[])\:</strong>\ The\ spots\ available\ in\ the\ game.</li>\r\n\ </ul>\r\n
comment10.params=spotNumber
comment10.target=boolean\ isSomeonePlaying(int)
comment10.text=\r\n\ <h3>boolean\ isSomeonePlaying(int\ spotNumber)</h3>\r\n\ <p>Checks\ if\ a\ gambler\ is\ currently\ playing\ at\ a\ specified\ spot\ in\ the\ game.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>spotNumber\ (int)\:</strong>\ The\ index\ of\ the\ spot\ to\ check.</li>\r\n\ </ul>\r\n\ <p><strong>Returns\:</strong></p>\r\n\ <p>True\ if\ a\ gambler\ is\ playing\ at\ the\ spot,\ false\ otherwise.</p>\r\n
comment11.params=spotNumber
comment11.target=void\ removeReservation(int)
comment11.text=\r\n\ <h3>void\ removeReservation(int\ spotNumber)</h3>\r\n\ <p>Removes\ a\ reservation\ for\ a\ spot,\ indicating\ that\ it\ is\ no\ longer\ reserved.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>spotNumber\ (int)\:</strong>\ The\ index\ of\ the\ spot\ to\ remove\ the\ reservation\ from.</li>\r\n\ </ul>\r\n
comment12.params=spotNumber
comment12.target=void\ addReservation(int)
comment12.text=\r\n\ <h3>void\ addReservation(int\ spotNumber)</h3>\r\n\ <p>Adds\ a\ reservation\ for\ a\ spot,\ indicating\ that\ it\ is\ reserved\ for\ a\ specific\ purpose.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>spotNumber\ (int)\:</strong>\ The\ index\ of\ the\ spot\ to\ add\ the\ reservation\ to.</li>\r\n\ </ul>\r\n
comment13.params=i
comment13.target=boolean\ hasReservation(int)
comment13.text=\r\n\ <h3>boolean\ hasReservation(int\ i)</h3>\r\n\ <p>Checks\ if\ a\ spot\ in\ the\ game\ has\ a\ reservation.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>i\ (int)\:</strong>\ The\ index\ of\ the\ spot\ to\ check.</li>\r\n\ </ul>\r\n\ <p><strong>Returns\:</strong></p>\r\n\ <p>True\ if\ the\ spot\ has\ a\ reservation,\ false\ otherwise.</p>\r\n
comment2.params=w
comment2.target=void\ addedToWorld(greenfoot.World)
comment2.text=\r\n\ <h3>void\ addedToWorld(World\ w)</h3>\r\n\ <p>Called\ when\ the\ game\ is\ added\ to\ the\ world,\ integrating\ it\ into\ the\ SpotManager\ system.</p>\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ <p>Handles\ the\ game's\ actions\ each\ step,\ managing\ image\ transparency\ and\ other\ behaviors.</p>\r\n
comment4.params=
comment4.target=Gambler[]\ getGamblers()
comment4.text=\r\n\ <h3>Gambler[]\ getGamblers()</h3>\r\n\ <p>Returns\ an\ array\ of\ gamblers\ currently\ in\ the\ game.</p>\r\n\ <p><strong>Return\:</strong>\ Gambler[]\ -\ The\ array\ of\ gamblers.</p>\r\n
comment5.params=
comment5.target=SpotManager.Spot[]\ getSpots()
comment5.text=\r\n\ <h3>SpotManager.Spot[]\ getSpots()</h3>\r\n\ <p>Returns\ an\ array\ of\ spots\ available\ in\ the\ game.</p>\r\n\ <p><strong>Return\:</strong>\ SpotManager.Spot[]\ -\ The\ array\ of\ spots.</p>\r\n
comment6.params=g\ spotNumber
comment6.target=void\ placeGambler(Gambler,\ int)
comment6.text=\r\n\ <h3>void\ placeGambler(Gambler\ g,\ int\ spotNumber)</h3>\r\n\ <p>Places\ a\ gambler\ in\ a\ specified\ spot\ within\ the\ game.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>g\ (Gambler)\:</strong>\ The\ gambler\ to\ place.</li>\r\n\ \ \ \ \ <li><strong>spotNumber\ (int)\:</strong>\ The\ spot\ number\ where\ the\ gambler\ will\ be\ placed.</li>\r\n\ </ul>\r\n
comment7.params=i
comment7.target=void\ endGamblerSession(int)
comment7.text=\r\n\ <h3>void\ endGamblerSession(int\ i)</h3>\r\n\ <p>Ends\ the\ session\ for\ a\ gambler\ in\ a\ specific\ spot.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>i\ (int)\:</strong>\ The\ spot\ number\ of\ the\ gambler\ whose\ session\ is\ to\ end.</li>\r\n\ </ul>\r\n
comment8.params=g\ spotNumber
comment8.target=void\ absolutePlaceGambler(Gambler,\ int)
comment8.text=\r\n\ <h3>void\ absolutePlaceGambler(Gambler\ g,\ int\ spotNumber)</h3>\r\n\ <p>Places\ a\ gambler\ at\ a\ specified\ spot\ in\ the\ game.\ If\ the\ spot\ is\ already\ occupied,\r\n\ it\ ends\ the\ current\ gambler's\ session\ and\ replaces\ them\ with\ the\ new\ gambler.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>g\ (Gambler)\:</strong>\ The\ Gambler\ object\ to\ be\ placed.</li>\r\n\ \ \ \ \ <li><strong>spotNumber\ (int)\:</strong>\ The\ index\ of\ the\ spot\ where\ the\ gambler\ is\ to\ be\ placed.</li>\r\n\ </ul>\r\n
comment9.params=spotNumber
comment9.target=boolean\ isSpotTaken(int)
comment9.text=\r\n\ <h3>boolean\ isSpotTaken(int\ spotNumber)</h3>\r\n\ <p>Checks\ if\ a\ particular\ spot\ in\ the\ game\ is\ currently\ occupied\ by\ a\ gambler.</p>\r\n\ <p><strong>Parameters\:</strong></p>\r\n\ <ul>\r\n\ \ \ \ \ <li><strong>spotNumber\ (int)\:</strong>\ The\ index\ of\ the\ spot\ to\ check.</li>\r\n\ </ul>\r\n\ <p><strong>Returns\:</strong></p>\r\n\ <p>True\ if\ the\ spot\ is\ occupied,\ false\ otherwise.</p>\r\n
numComments=14
